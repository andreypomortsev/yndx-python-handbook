name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}  # Can dynamically choose OS based on the matrix

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pip install poetry
      
      - name: Install dependencies using Poetry
        run: |
          poetry install --no-root

      - name: Run Flake8 linting
        run: |
          poetry run flake8 .

      - name: Final linting status
        run: echo "Linting passed."

      - name: Set PYTHONPATH
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "PYTHONPATH=${{ github.workspace }}" >> $env:GITHUB_ENV
          else
            echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV
          fi
        shell: bash
      
      - name: Set Python Encoding to UTF-8
        run: |
          echo "PYTHONIOENCODING=utf-8" >> $GITHUB_ENV
        shell: bash

      - name: Run Pytest with Coverage report in XML
        run: |
          poetry run pytest -n auto --cov-report=xml
        env:
          CI: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.0.7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
