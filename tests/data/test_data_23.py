a_test_data = [
    (
        "Раз!\nДва!\nТри!\n",
        "Режим ожидания...\nРежим ожидания...\nЁлочка, гори!",
        "first open test",
    ),
    (
        "Десять!\nДевять!\nРаз!\nТри!\n",
        "Режим ожидания...\n"
        "Режим ожидания...\n"
        "Режим ожидания...\n"
        "Ёлочка, гори!",
        "second open test",
    ),
    (
        "Три!\nДва!\nРаз!\nРаз!\n",
        "Ёлочка, гори!",
        "first word",
    ),
    (
        "Тринадцать!\nТридцать!\nТри!\n",
        "Режим ожидания...\nРежим ожидания...\nЁлочка, гори!",
        "subset test",
    ),
    (
        "Тридцать три!\nТри!\n",
        "Режим ожидания...\nЁлочка, гори!",
        "33 test",
    ),
]


b_test_data = [
    (
        "березка елочка зайка волк березка\n"
        "сосна сосна сосна елочка грибочки медведь\n"
        "сосна сосна сосна белочка сосна белочка\n"
        "Приехали!\n",
        "1",
        "first open test",
    ),
    (
        "зайка березка\n"
        "березка зайка\n"
        "березка елочка березка\n"
        "Приехали!\n",
        "2",
        "second open test",
    ),
    (
        "березка елочка лиса волк березка\n"
        "сосна сосна сосна елочка грибочки медведь\n"
        "сосна сосна сосна белочка сосна белочка\n"
        "Приехали!\n",
        "0",
        "no bunnies",
    ),
    (
        "зайка елочка зайка волк березка\n"
        "сосна зайка сосна елочка грибочки медведь\n"
        "зайка сосна сосна зайка сосна зайка\n"
        "Приехали!\n",
        "3",
        "many bunnies",
    ),
    (
        "елочка волк елочка волк елочка волк березка\n"
        "\n"
        "зайка сосна сосна зайка сосна зайка\n"
        "Приехали!\n",
        "1",
        "empty string",
    ),
    (
        "\n"
        "елочка волк елочка волк елочка волк березка\n"
        "зайка сосна сосна зайка сосна зайка\n"
        "Приехали!\n",
        "1",
        "first empty string",
    ),
    (
        "зайка\n"
        "елочка волк елочка волк елочка волк березка зайка\n"
        "зайка сосна сосна зайка сосна зайка\n"
        "зайка\n"
        "елочка волк елочка волк елочка волк березка зайка\n"
        "зайка сосна сосна зайка сосна зайка\n"
        "зайка\n"
        "елочка волк елочка волк елочка волк березка зайка\n"
        "зайка сосна сосна зайка сосна зайка\n"
        "Приехали!\n",
        "9",
        "bunnies in every row",
    ),
]


c_test_data = [
    ("1\n10\n", "1 2 3 4 5 6 7 8 9 10", "first open test"),
    ("-3\n3\n", "-3 -2 -1 0 1 2 3", "second open test"),
    ("1\n2\n", "1 2", "small distance"),
    ("-2\n-1\n", "-2 -1", "small distance negative"),
    ("99\n102\n", "99 100 101 102", "around a hundred"),
    ("-10\n0\n", "-10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0", "negative to zero"),
    ("0\n9\n", "0 1 2 3 4 5 6 7 8 9", "zero to nine"),
    ("10\n19\n", "10 11 12 13 14 15 16 17 18 19", "ten to nineteen"),
]


d_test_data = [
    ("1\n10\n", "1 2 3 4 5 6 7 8 9 10", "first open test"),
    ("3\n-3\n", "3 2 1 0 -1 -2 -3", "second open test"),
    ("1\n2\n", "1 2", "small distance"),
    ("-2\n-1\n", "-2 -1", "small distance negative"),
    ("99\n102\n", "99 100 101 102", "around a hundred"),
    ("-10\n0\n", "-10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0", "negative to zero"),
    ("0\n9\n", "0 1 2 3 4 5 6 7 8 9", "zero to nine"),
    ("10\n19\n", "10 11 12 13 14 15 16 17 18 19", "ten to nineteen"),
    (
        "-10\n-19\n",
        "-10 -11 -12 -13 -14 -15 -16 -17 -18 -19",
        "negative ten to neg nineteen",
    ),
    ("-3\n3\n", "-3 -2 -1 0 1 2 3", "neg to pos through zero"),
]


e_test_data = [
    ("100\n500\n333\n0\n", "883.0", "first open test"),
    ("512\n499\n342.50\n0\n", "1302.3", "second open test"),
    ("100\n499\n1\n0\n", "600.0", "no discount"),
    ("499.99\n0.03\n342.99\n0\n", "843.01", "floats no discount"),
    ("599.99\n500.02\n542.99\n0\n", "1478.7", "floats with discount"),
    (
        "1_000_000_000_000\n499_000_000_000_000\n342_000_000_000_000.50\n0\n",
        "757800000000000.5",
        "huge numbers",
    ),
]


f_test_data = [
    ("12\n42\n", "6", "first open test"),
    ("512\n625\n", "1", "second open test"),
    ("0\n99\n", "99", "first is zero"),
    ("88\n0\n", "88", "second is zero"),
]


g_test_data = [
    ("12\n42\n", "84", "first open test"),
    ("512\n625\n", "320000", "second open test"),
    ("0\n99\n", "0", "first is zero"),
    ("88\n0\n", "0", "second is zero"),
    ("1\n99\n", "99", "first is one"),
    ("88\n1\n", "88", "second is one"),
]


h_test_data = [
    ("2 + 2 = 4\n3\n", "2 + 2 = 4\n2 + 2 = 4\n2 + 2 = 4", "first open test"),
    (
        "Нельзя нажимать неизвестные кнопки!\n4\n",
        "Нельзя нажимать неизвестные кнопки!\n"
        "Нельзя нажимать неизвестные кнопки!\n"
        "Нельзя нажимать неизвестные кнопки!\n"
        "Нельзя нажимать неизвестные кнопки!",
        "second open test",
    ),
    ("Яндекс не покрывает тестами свои задачи\n0\n", "", "zero repeat"),
]


i_test_data = [
    ("3\n", "6", "first open test"),
    ("5\n", "120", "second open test"),
    ("0\n", "1", "zero factorial"),
    ("1\n", "1", "one factorial"),
    ("2\n", "2", "two factorial"),
    ("19\n", "121645100408832000", "big factorial"),
]


j_test_data = [
    ("СЕВЕР\n2\nВОСТОК\n2\nСТОП\n", "2\n2", "first open test"),
    ("СЕВЕР\n2\nЮГ\n3\nЗАПАД\n4\nСТОП\n", "-1\n-4", "second open test"),
    (
        "СЕВЕР\n99\nВОСТОК\n99\nЮГ\n99\nЗАПАД\n99\nСТОП\n",
        "0\n0",
        "counter clockwise circle",
    ),
    (
        "ЮГ\n1\nЗАПАД\n1\nСЕВЕР\n1\nВОСТОК\n1\nСТОП\n",
        "0\n0",
        "clockwise circle",
    ),
]


k_test_data = [
    ("12345\n", "15", "first open test"),
    ("100500\n", "6", "second open test"),
    ("000000\n", "0", "zero"),
    (
        "19219391293124791237218461928312371941289128371928472813273563652\n",
        "281",
        "huge num",
    ),
    ("1000000\n", "1", "one"),
    ("1000001\n", "2", "two"),
]


l_test_data = [
    ("12345\n", "5", "first open test"),
    ("100500\n", "5", "second open test"),
    ("1234543219\n", "9", "last is max"),
    ("88888888888888888888\n", "8", "all equal"),
    ("000000000\n", "0", "zero"),
    ("987654321\n", "9", "first is max"),
    ("12345678987654321\n", "9", "max is in the middle"),
]


m_test_data = [
    ("3\nВова\nАня\nБоря\n", "Аня", "first open test"),
    ("4\nТоля\nКоля\nВася\nЮля\n", "Вася", "second open test"),
    ("4\nВасилий\nКоля\nВася\nЮля\n", "Василий", "longest wins"),
    ("4\nВасилий\nКоля\nВасил\nЮля\n", "Васил", "substring"),
    ("2\nAnna\nAmy\n", "Amy", "english names"),
    ("1\nAnna\n", "Anna", "one english name"),
    ("1\nИгнат\n", "Игнат", "one russian name"),
]


n_test_data = [
    ("1\n", "NO", "first open test"),
    ("67\n", "YES", "second open test"),
    ("6\n", "NO", "six is not prime"),
    ("3\n", "YES", "three is prime"),
    ("103\n", "YES", "103 is prime"),
    ("102\n", "NO", "102 is not prime"),
    ("125\n", "NO", "125 is not prime"),
]


o_test_data = [
    (
        "3\nберезка елочка зайка волк березка\n"
        "сосна сосна сосна елочка грибочки медведь\n"
        "сосна сосна сосна белочка сосна белочка\n",
        "1",
        "first open test",
    ),
    (
        "4\nзайка березка\n"
        "березка зайка\n"
        "березка елочка березка\n"
        "елочка елочка елочка\n",
        "2",
        "second open test",
    ),
    (
        "6\nзайкаберезка елочка зайка волк березка\n"
        "сосна зайка сосна сосна зайка елочка грибочки медведь\n"
        "\n"
        "сосна сосна зайка сосна белочка сосна белочка зайка\n"
        "сосна зайка сосна белочка сосна белочка зайка\n"
        "сосна сосна зайка сосна сосна белочка зайка\n",
        "5",
        "bunnies everywhere",
    ),
]


p_test_data = [
    ("1234\n", "NO", "first open test"),
    ("123454321\n", "YES", "second open test"),
    ("12344321\n", "YES", "even length"),
    ("9876543210123456789\n", "YES", "all nums 9-0-9"),
    ("987654321023456789\n", "NO", "9-0-9 1 missing"),
    ("98765432101234567890\n", "NO", "all nums 9-0-9 plus 0"),
]


q_test_data = [
    ("1234\n", "13", "first open test"),
    ("123454321\n", "13531", "second open test"),
    ("135797535973\n", "135797535973", "all odd"),
    ("2032134\n", "313", "checking for zero"),
    ("1032134\n", "1313", "with zero"),
]


r_test_data = [
    (
        "120\n",
        "2 * 2 * 2 * 3 * 5",
        "first open test",
    ),
    ("98\n", "2 * 7 * 7", "second open test"),
    ("2\n", "2", "small prime"),
    ("3\n", "3", "next small prime"),
    ("5\n", "5", "5 prime"),
    ("291\n", "3 * 97", "prod of primes"),
    ("7159203823\n", "397 * 4079 * 4421", "big num"),
    ("121\n", "11 * 11", "11 in pow of 2"),
]


s_test_data = [
    (
        "Меньше\n"
        "Меньше\n"
        "Меньше\n"
        "Больше\n"
        "Больше\n"
        "Больше\n"
        "Больше\n"
        "Больше\n"
        "Угадал!\n",
        "500\n250\n125\n63\n94\n109\n117\n121\n123",
        "first open test",
    ),
    (
        "Больше\n"
        "Больше\n"
        "Больше\n"
        "Больше\n"
        "Больше\n"
        "Больше\n"
        "Больше\n"
        "Больше\n"
        "Больше\n"
        "Угадал!\n",
        "500\n750\n875\n937\n968\n984\n992\n996\n998\n999",
        "max number",
    ),
    (
        "Меньше\n"
        "Меньше\n"
        "Меньше\n"
        "Меньше\n"
        "Меньше\n"
        "Меньше\n"
        "Меньше\n"
        "Меньше\n"
        "Меньше\n"
        "Угадал!\n",
        "500\n250\n125\n63\n32\n16\n8\n4\n2\n1",
        "min number",
    ),
]


t_test_data = [
    (
        "5\n" "6122802\n" "14406496\n" "15230209\n" "2541121\n" "1758741\n",
        "-1",
        "first open test",
    ),
    (
        "5\n" "1865535\n" "13479687\n" "16689153\n" "1839958\n" "5214020\n",
        "3",
        "second open test",
    ),
]
