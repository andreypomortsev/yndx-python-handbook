a_test_data = [
    ("1 2\n3 4 5\n6\n7 8 9 10\n", "55\n", "first open test"),
    ("-21\n-12\n-9\n", "-42\n", "all nagative few lines"),
    ("-21 -12 -9\n", "-42\n", "all nagative one line"),
    ("0\n0 0 0 0 0\n0 0\n", "0\n", "all zeros few lines"),
    ("0 0 0 0 0 0 0 0\n", "0\n", "all zeros one line"),
    ("-10\n1 2 3 3 0\n0 1\n", "0\n", "zero sum few lines"),
    ("-10 1 2 3 3 0 0 1\n", "0\n", "zero sum one line"),
    (
        "100000\n1000000 2004234 342312323 33123443234 34255645670\n313657870 429934584672731\n",
        "430002622836062\n",
        "big sum few lines",
    ),
    (
        "100000 1000000 2004234 342312323 33123443234 34255645670 313657870 429934584672731\n",
        "430002622836062\n",
        "big sum one line",
    ),
    ("-10\n\n\n\n10\n", "0\n", "zero sum empty lines"),
]

b_test_data = [
    ("Аня 160 162\nБоря 165 172\nВова 165 165\n", "3\n", "first open test"),
    (
        "Аня 161 165\nБоря 167 172\nВова 165 166\nДима 173 178\n",
        "4\n",
        "second open test",
    ),
    ("Аня 164 162\nБоря 165 163\nВова 165 165\n", "-1\n", "negative growth"),
    (
        "Аня 165 165\nБоря 172 172\nВова 166 166\nДима 178 178\n",
        "0\n",
        "zero growth",
    ),
    (
        "Аня 160.6 162.7\nБоря 159.9 163.1\nВова 165.1 165.9\n",
        "2\n",
        "float growth",
    ),
    (
        "Аня 160 162\nБоря 159 163\nВова 165 165\nLePricon 165 159",
        "0\n",
        "negative outlier",
    ),
    (
        "Аня 166 162\nБоря 156 153\nВова 165 163\nJamal 150 159",
        "0\n",
        "positive outlier",
    ),
]

# c_test_data такая же как и для 3.1 I

# d_test_data такая же как и для 3.1 K

e_test_data = [
    (
        "Анна Боря Вова\n"
        "Я последняя буква алфавита\n"
        "Дед строит шалаш\n"
        "Шалаш был хорош\n"
        "Дед слышит топот\n"
        "Ара залетел в шалаш\n",
        "Анна\nАра\nДед\nШалаш\nЯ\nв\nтопот\nшалаш\n",
        "first open test",
    ),
    (
        "Казак был рад\n"
        "Боб увидел Анну\n"
        "Семья любит Деда\n"
        "Ара летает\n"
        "Я иду к нему\n",
        "Ара\nБоб\nКазак\nЯ\nк\n",
        "palindrome and single letter test",
    ),
    (
        "Кот ходит по дому\nСобака лает\nПтица, а поет на дереве\n",
        "а\n",
        "single letter test",
    ),
    (
        "Радар Малам Карек\nКак дошел до топора\nЯ и он в арке\n",
        "Как\nМалам\nРадар\nЯ\nв\nи\n",
        "palindromes mixed length test",
    ),
    (
        "Дом Кот Лиса Окно\nБеседа на природе\nЧеловек идет по улице\n",
        "",
        "no palindrome, no single letter test",
    ),
]

# f_test_data такая же как и для 3.2 J

g_test_data = [
    (
        "numbers.txt",
        "1 2 3 4 5\n-5 -4 -3 -2 -1\n10 20\n20 10\n",
        "14\n9\n-5\n20\n60\n4.29\n",
        "first open test",
    ),
    (
        "digits",
        "1 2 3 4 5\n-5 -4 -3 -2 -1\n10 20\n20 10\n",
        "14\n9\n-5\n20\n60\n4.29\n",
        "file w/o extension",
    ),
    (
        "some file.txt",
        "1 2 3 4 5\n-5 -4 -3 -2 -1\n10 20\n20 10\n",
        "14\n9\n-5\n20\n60\n4.29\n",
        "two words file name",
    ),
    (
        "some file.txt",
        "0\n0\n0\n0\n0\n0\n0\n0\n",
        {"8\n0\n0\n0\n0\n0.0\n", "8\n0\n0\n0\n0\n0.00\n"},
        "zeros in several lines",
    ),
    (
        "some file.txt",
        "1000000 200000003 310020030000203 120310120310040130 212031031020031020\n",
        {
            "5\n5\n"
            "1000000\n"
            "212031031020031020\n"
            "332651171561071356\n"
            "6.653023431221427e+16\n",
            "5\n5\n"
            "1000000\n"
            "212031031020031020\n"
            "332651171561071356\n"
            "66530234312214272.00\n",
        },
        "big nums in a line",
    ),
    (
        "different_file.txt",
        "1000000\n200000003\n310020030000203\n120310120310040130\n212031031020031020\n",
        {
            "5\n5\n"
            "1000000\n"
            "212031031020031020\n"
            "332651171561071356\n"
            "6.653023431221427e+16\n",
            "5\n5\n"
            "1000000\n"
            "212031031020031020\n"
            "332651171561071356\n"
            "66530234312214272.00\n",
        },
        "big nums in a few lines",
    ),
    (
        "rational.txt",
        "1 2 3\n4 5 6 7\n8 9 10 11 12\n13 14 15 16 17\n\n\n1000\n",
        "18\n18\n1\n1000\n1153\n64.06\n",
        "few empty lines",
    ),
]

h_test_data = [
    (
        ("first.txt", "second.txt", "answer.txt"),
        (
            "кофе молоко\nчай печенье\nвелосипед\n",
            "кофе велосипед\nпряник жвачка весло\n",
        ),
        {
            "весло\nжвачка\nмолоко\nпеченье\nпряник\nчай\n",
            "весло\nжвачка\nмолоко\nпеченье\nпряник\nчай",
        },
        "first open test",
    ),
    (
        ("uno", "dos", "resultado"),
        (
            "кофе молоко\nчай печенье\nвелосипед\n",
            "кофе велосипед\nпряник жвачка весло\n",
        ),
        {
            "весло\nжвачка\nмолоко\nпеченье\nпряник\nчай\n",
            "весло\nжвачка\nмолоко\nпеченье\nпряник\nчай",
        },
        "first open tes file names w/o extensions",
    ),
    (
        ("1.log", "2.txt", "3.txt"),
        (
            "молоко\nчай печенье\nвелосипед\n",
            "кофе велосипед\nпряник жвачка весло\n",
        ),
        {
            "весло\nжвачка\nкофе\nмолоко\nпеченье\nпряник\nчай\n",
            "весло\nжвачка\nкофе\nмолоко\nпеченье\nпряник\nчай",
        },
        "all distinct",
    ),
    (
        ("1.log", "2.txt", "3.txt"),
        (
            "молоко\nчай печенье\nвелосипед\n",
            "\n",
        ),
        {
            "велосипед\nмолоко\nпеченье\nчай\n",
            "велосипед\nмолоко\nпеченье\nчай",
        },
        "one empty file",
    ),
    (
        ("1.log", "2.txt", "3.txt"),
        (
            "\n",
            "кофе велосипед\nпряник жвачка весло\n",
        ),
        {
            "велосипед\nвесло\nжвачка\nкофе\nпряник\n",
            "велосипед\nвесло\nжвачка\nкофе\nпряник",
        },
        "another empty file",
    ),
    (
        ("temp.log", "temp2.txt", "temp3.txt"),
        (
            "\n",
            "\n",
        ),
        {"\n", ""},
        "two empty files",
    ),
]

i_test_data = [
    (
        ("first.txt", "second.txt"),
        """\
очень 		 плохо форматированный       текст


ну		ну	
прямо

очень-очень

	""",
        {
            "очень плохо форматированный текст\nнуну\nпрямо\nочень-очень\n",
            "очень плохо форматированный текст\nнуну\nпрямо\nочень-очень",
        },
        "first open test",
    ),
    (
        ("2", "1"),
        """\
очень 		 плохо форматированный       текст


ну		ну	
прямо

очень-очень

	""",
        {
            "очень плохо форматированный текст\nнуну\nпрямо\nочень-очень\n",
            "очень плохо форматированный текст\nнуну\nпрямо\nочень-очень",
        },
        "first open test file name w/o extensions",
    ),
    (
        ("input.log", "output.txt"),
        """\
очень 		 плохо форматированный       текст


ну		ну	
прямо

очень	-очень

	к	о	н	е	ц	 !""",
        {
            "очень плохо форматированный текст\nнуну\nпрямо\nочень-очень\nконец !\n",
            "очень плохо форматированный текст\nнуну\nпрямо\nочень-очень\nконец !",
        },
        "tab separated word",
    ),
    (
        ("input.log", "output.txt"),
        """\
s 		            
t
a
r
t



	к	о	н	е	ц	 !""",
        {
            "s\nt\na\nr\nt\nконец !\n",
            "s\nt\na\nr\nt\nконец !",
        },
        "lines separated word",
    ),
]

j_test_data = [
    (
        "some_file.txt",
        "1 строка\n2 строка\n3 строка\n4 строка\n5 строка\n",
        "2",
        {
            "4 строка\n5 строка\n\n",
            "4 строка\n5 строка\n",
            "4 строка\n5 строка",
        },
        "first open test",
    ),
    (
        "temp",
        "1 строка\n2 строка\n3 строка\n4 строка\n5 строка\n",
        "5",
        {
            "1 строка\n2 строка\n3 строка\n4 строка\n5 строка\n\n",
            "1 строка\n2 строка\n3 строка\n4 строка\n5 строка\n",
            "1 строка\n2 строка\n3 строка\n4 строка\n5 строка",
        },
        "all file",
    ),
    (
        "empty.txt",
        "\n\n\n\n\n",
        "5",
        {
            "\n\n\n\n\n\n",
            "\n\n\n\n\n",
            "\n\n\n\n",
        },
        "all empty lines file",
    ),
    (
        "empty-last_line.txt",
        "1 строка\n2 строка\n3 строка\n\n4 строка\n5 строка\n\n",
        "4",
        {
            "\n4 строка\n5 строка\n\n\n",
            "\n4 строка\n5 строка\n\n",
            "\n4 строка\n5 строка\n",
        },
        "few empty plus text",
    ),
]
